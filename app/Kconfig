#
# Copyright (c) 2024, Jamie M.
#
# All right reserved. This code is NOT apache or FOSS/copyleft licensed.
#

menu "Application"

config APP_SENSOR_READING_TIME
	int "Time (in seconds) between samples"
	default 150
	range 30 7200

config APP_LORA_CONFIRMED_PACKET_AFTER
	int "Number of unconfirmed packets before confirmed packet"
	default 20
	range 0 100
	help
	  Number of unconfirmed uplink packets that are sent before a confirmed packet is sent.
	  Set to 0 to disabled

config APP_LORA_USE_SPECIFIC_DATARATE
	bool "Use specific datarate"
	default y
	help
	  If enabled, will use a specific datarate at startup

choice APP_LORA_DATARATE
	prompt "Datarata"
	depends on APP_LORA_USE_SPECIFIC_DATARATE
	default APP_LORA_DATARATE_5

config APP_LORA_DATARATE_0
	bool "0"
	help
	  Use datarate 0 (SF12, 125KHz, 250bps, 51 byte application payload)

config APP_LORA_DATARATE_1
	bool "1"
	help
	  Use datarate 1 (SF11, 125KHz, 440bps, 51 byte application payload)

config APP_LORA_DATARATE_2
	bool "2"
	help
	  Use datarate 2 (SF10, 125KHz, 960bps, 51 byte application payload)

config APP_LORA_DATARATE_3
	bool "3"
	help
	  Use datarate 3 (SF9, 125KHz, 1760bps, 115 byte application payload)

config APP_LORA_DATARATE_4
	bool "4"
	help
	  Use datarate 4 (SF8, 125KHz, 3125bps, 222 byte application payload)

config APP_LORA_DATARATE_5
	bool "5"
	help
	  Use datarate 5 (SF7, 125KHz, 5470bps, 222 byte application payload)

endchoice # CLOCK_CONTROL_LPC11U6X_PLL_SRC

config APP_LORA_USE_ADR
	bool "Use ADR"
	default y
	help
	  If enabled, will use adaptive data rate

config APP_LORA_ALLOW_DOWNLINKS
	bool "Allow downlinks"
	default y
	help
	  If enabled, will allow application to receive and handle downlinks

config APP_IR_LED
	bool "Infrared LED support"
	depends on "$(dt_alias_enabled,ir-led)"
	default y
	help
	  If enabled, will include support for Infrared LED command output

config APP_EXTERNAL_DCDC
	bool "External DCDC"
	help
	  If enabled, will sample AIN3 for the voltage with 2 BAS16 diodes dropping the voltage
	  instead of the voltage in.

config APP_POWER_DOWN_EXTERNAL_SENSOR
	bool "Power down external sensor when not in use"
	depends on REGULATOR_FIXED
	depends on "$(dt_nodelabel_enabled,ext_power)"
	help
	  If enabled, will power down the external sensor port when it is not in use, but will lose
	  the configuration of the sensor if it is configured by the driver at start-up.

config APP_TYPE
	hex
	default 0x34 if DT_HAS_AOSONG_DHT11_ENABLED && APP_IR_LED && ADC
	default 0x32 if DT_HAS_BOSCH_BME680_ENABLED && APP_IR_LED && ADC
	default 0x31 if DT_HAS_SILABS_SI7006_ENABLED && APP_IR_LED && ADC
	default 0x24 if DT_HAS_AOSONG_DHT11_ENABLED && ADC
	default 0x22 if DT_HAS_BOSCH_BME680_ENABLED && ADC
	default 0x21 if DT_HAS_SILABS_SI7006_ENABLED && ADC
	default 0x14 if DT_HAS_AOSONG_DHT11_ENABLED && APP_IR_LED
	default 0x12 if DT_HAS_BOSCH_BME680_ENABLED && APP_IR_LED
	default 0x11 if DT_HAS_SILABS_SI7006_ENABLED && APP_IR_LED
	default 0x04 if DT_HAS_AOSONG_DHT11_ENABLED
	default 0x02 if DT_HAS_BOSCH_BME680_ENABLED
	default 0x01 if DT_HAS_SILABS_SI7006_ENABLED
	default 0x00
	range 0x00 0xffff
	help
	  bit 0: si7021
	  bit 1: bme680
	  bit 2: dht11
	  bit 3: reserved
	  bit 4: IR LED
	  bit 5: ADC
	  bit 6: reserved
	  bit 7: reserved
	  bit 8: reserved
	  bit 9: reserved
	  bit 10: reserved
	  bit 11: reserved
	  bit 12: reserved
	  bit 13: reserved
	  bit 14: reserved
	  bit 15: reserved

module = APP
module-str = Application
source "subsys/logging/Kconfig.template.log_config"

module = APP_LEDS
module-str = LEDs
source "subsys/logging/Kconfig.template.log_config"

module = APP_LORA
module-str = LoRa
source "subsys/logging/Kconfig.template.log_config"

module = APP_SENSOR
module-str = Sensor
source "subsys/logging/Kconfig.template.log_config"

if ADC

module = APP_ADC
module-str = Battery voltage measurement
source "subsys/logging/Kconfig.template.log_config"

endif # ADC

if BT

module = APP_BLUETOOTH
module-str = Bluetooth
source "subsys/logging/Kconfig.template.log_config"

endif # BT

if APP_IR_LED

module = APP_IR_LED
module-str = IR LED
source "subsys/logging/Kconfig.template.log_config"

module = APP_HFCLK
module-str = HFCLK
source "subsys/logging/Kconfig.template.log_config"

endif # APP_INFRARED_LED

endmenu

source "Kconfig.zephyr"
